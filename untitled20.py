# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ItuHQCtvJJ7fAwGXA_lOq-_GN4MXD_6H

create two series as shows using pd.ser
"""

import pandas as pd
a=pd.Series([15,26,33,47,59])
b=pd.Series([69,70,89,90,10])
d=a[~a.isin(b)]
e=b[~b.isin(a)]
print(d)
print(e)
print(a.min())
print(a.max())
print(b.sum())
average=sum(a)/len(a)
print(average)
print(b.median())

"""car manufacturing company dataset"""

import pandas as pd
data=pd.read_csv("auto-mpg.csv")
print(data)

cars=data[data["cylinders"]==8]
print(cars)

number_of_cars=data["model-year"].value_counts().sort_index()
print(number_of_cars)

cars = data["model-year"].value_counts().sort_index()
print(cars)

cylinders = data[data["cylinders"]==8]
print(cylinders)

import pandas as pd
data=pd.read_csv("/content/mm.csv")
print(data)

"""tip manufacturing company dataset"""

import pandas as pd
data =pd.read_csv("/content/tips.csv")
print(data)

size= data[data["size"]== 2]
print(size)

d =data["day"].value_counts().sort_index()
print(d)

filtered_data = data[data["tip"]>5]
print(filtered_data)

"""pandas tip function"""

from functools import reduce
total_tip = reduce(lambda x,y: x+y, data["tip"])
print("total_tip:",total_tip)

"""iris manufacturing company dataset"""

import pandas as pd
df = pd.read_csv("/content/lax.csv")
print(df)

df.describe()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['target'] = iris.target

# (i) Print first 5 records
print("First 5 records:")
print(df.head())

# (ii) Print the size of the data for the given dataset
print("\nSize of the dataset:")
print(df.shape)

# (iii) Use Scatter plot to compare petal length and petal width
plt.figure(figsize=(10, 6))
sns.scatterplot(x=df['petal length (cm)'], y=df['petal width (cm)'], hue=df['target'], palette='viridis')
plt.title('Petal Length vs Petal Width')
plt.xlabel('Petal Length (cm)')
plt.ylabel('Petal Width (cm)')
plt.show()

# (iv) Check for missing values
print("\nMissing values in the dataset:")
print(df.isnull().sum())


print("\nSummary of the dataset:")
print(df.describe())

import matplotlib.pyplot as plt
import numpy as np

# Define the range and function
x = np.linspace(-1, 1, 100)
y = np.cos(x)

# Plot the graph
plt.figure(figsize=(8, 6))
plt.plot(x, y, linewidth=4)
plt.title("Cosine Graph")
plt.xlabel("x")
plt.ylabel("cos(x)")
plt.grid(True)
plt.show()

import numpy as np
from operator import add
from functools import  reduce
a=np.array([3,7,9,1,])
sq=list(map(lambda square: (square**2),a))
print(sq)

import numpy as np
s1 = np.array([[3, 4, 7, 8],[6, 9, 4, 2]])
res = np.sum(s1,axis=0)
print(res)

import numpy as np
s1 = np.array([[3, 4, 7, 8],[6, 9, 4, 2]])
res = np.prod(s1,axis=1)
print(res)

import numpy as np
s1 = np.array([[3, 4, 7, 8],[6, 9, 4, 2]])
res = np.mean(s1,axis=0)
print(res)

import numpy as np
s1 = np.array([[3, 4, 7, 8],[6, 9, 4, 2]])
res = np.std(s1,axis=1)
print(res)

